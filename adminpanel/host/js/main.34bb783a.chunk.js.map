{"version":3,"sources":["action/index.js","Host.js","HostPage.js","App.js","index.js"],"names":["inital_base_url","window","location","hostname","protocol","Host","props","contents","Col","Row","sm","className","host","count","hostDay","Math","round","hostUn","hostDayUn","useEffect","metrika","map","x","id","HostPage","page","name","hostViz","App","d","Date","useState","sec","setSec","min","setMin","hour","setHour","setCount","db","setDb","f","url","params","axios","get","then","rezult","data","setInterval","c","clearInterval","getMinutes","getSeconds","getHours","Object","values","Container","filter","m","i","content","getDate","getMonth","getUTCFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.34bb783a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nlet inital_base_url = 'http://adminpanel';\r\nif (window.location.hostname === \"localhost\") {\r\n    inital_base_url = 'http://adminpanel';\r\n}else{\r\n   inital_base_url = window.location.protocol + \"//\" + window.location.hostname; \r\n   }\r\n\r\nexport function get(f, url, params = {}) {\r\n    axios.get(inital_base_url + url, params)\r\n        .then((rezult) => { f(rezult.data); })\r\n\r\n}","import React, { useEffect } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./css/metrika.css\";\r\nexport default function Host(props) {\r\n    function contents(props) {\r\n\r\n        return (\r\n            <Col>\r\n                <Row>\r\n                    <Col sm className=\"text-center host-view view\">\r\n                        <h4>Всего просмотров</h4>\r\n                        <h3>{props.host.count}</h3>\r\n                    </Col>\r\n                    <Col sm className=\"text-center hostDay-view view\">\r\n                        <h4>Просмотров этом году</h4>\r\n                        <h3>{props.host.hostDay}</h3>\r\n                    </Col>\r\n                    <Col sm className=\"text-center hostDayMouth-view view\">\r\n                        <h4>Просмотров в месяц</h4>\r\n                        <h3>{Math.round(props.host.hostDay / 12)}</h3>\r\n                    </Col>\r\n                    <Col sm className=\"text-center hostDayDay-view view\">\r\n                        <h4>Просмотров в день</h4>\r\n                        <h3>{Math.round(props.host.hostDay / 365)}</h3>\r\n                    </Col>\r\n                </Row>\r\n                 <Row>\r\n                    <Col sm className=\"text-center host-view view\">\r\n                        <h4>Всего уникальных просмотров</h4>\r\n                        <h3>{props.host.hostUn}</h3>\r\n                    </Col>\r\n                    <Col sm className=\"text-center hostDay-view view\">\r\n                        <h4>Уникальных просмотров этом году</h4>\r\n                        <h3>{props.host.hostDayUn}</h3>\r\n                    </Col>\r\n                    <Col sm className=\"text-center hostDayMouth-view view\">\r\n                        <h4>Уникальных просмотров в месяц</h4>\r\n                        <h3>{Math.round(props.host.hostDayUn / 12)}</h3>\r\n                    </Col>\r\n                    <Col sm className=\"text-center hostDayDay-view view\">\r\n                        <h4>Уникальных просмотров в день</h4>\r\n                        <h3>{Math.round(props.host.hostDayUn / 365)}</h3>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n\r\n        )\r\n    }\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n    return (\r\n        <Col>{props.metrika.map((x) => <div key={x.id + \"host\"}>{contents({ host: x.host })}</div>)}</Col>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./css/metrika.css\";\r\nexport default function HostPage(props) {\r\n    function contents(props) {\r\n  \r\n        return (\r\n         <Col key = {props.name + \"page\"} className = \"pageRow\"><Row><Col><h3>{props.name}</h3></Col><Col sm = \"2\" className = \"mt-2\">просмотров</Col><Col className = \"mt-2\">{props.hostViz}</Col></Row></Col>\r\n         )\r\n    }\r\n    useEffect(() => {\r\n\r\n    }, [])\r\n    return (\r\n        <Col className = \"hostPage\">{props.metrika.map((x) =>x.host.page.map((page)=>contents(page)))}</Col>\r\n    )\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { get } from \"./action\";\nimport \"./css/bootstrap.css\";\nimport Host from './Host';\nimport HostPage from './HostPage';\nfunction App() {\n  let d = new Date();\n  const [sec, setSec] = useState(0);\n  const [min, setMin] = useState(0);\n  const [hour, setHour] = useState(0);\n  const [count, setCount] = useState(0);\n  const [db, setDb] = useState([{}]);\n\n  useEffect(() => {\n    get(setDb, \"/adminpanel/host/metrika.php\");\n  }, [])\n\n  useEffect(() => {\n    const id = setInterval(() => {\n      setCount(c => c + 1);\n    }, 1000)\n    return () => clearInterval(id);\n  }, [])\n\n  useEffect(() => {\n    if (count > 10) {\n      setCount(0)\n    }\n    setMin(d.getMinutes());\n    setSec(d.getSeconds());\n    setHour(d.getHours());\n  }, [count])\n\n  let mounth = ['Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря'];\n\n  let metrika = Object.values(db);\n  return (\n    <Container>\n      <Col>{metrika.filter((f) => f.name === \"nameSite\").map((m, i) => m.content.map((x) => <h1 key={x.id + \"nameSite\"} className = \"nameSite\">{x.name}</h1>))}</Col>\n      <Col className = \"pageRow hostPage\">\n        <Row>\n          <Col> <h3>{d.getDate() + \" \" + mounth[d.getMonth()] + \" \" + d.getUTCFullYear() + \"г.\"}</h3></Col>\n          <Col> <h3>{hour + \" : \" + min + \" : \" + sec + \"\"}</h3></Col>\n        </Row>\n      </Col>\n      {metrika.filter((f) => f.name === \"host\").map((m, i) => <Host key={m.name} metrika={m.content} />)}\n      {metrika.filter((f) => f.name === \"hostPage\").map((m, i) => <HostPage key={m.name} metrika={m.content} />)}\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('metrika')\n);\n\n\n"],"sourceRoot":""}